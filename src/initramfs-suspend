#!/usr/bin/ash

cryptname="${1}"

# Start udev from initramfs
/usr/lib/systemd/systemd-udevd --daemon --resolve-names=never

# Synchronize filesystems before luksSuspend
sync

# Suspend root device
[ -z "${cryptname}" ] || cryptsetup luksSuspend "${cryptname}"

# Suspend the system
echo mem > /sys/power/state

# Resume root device
. /etc/ykfde.conf


[ -z "${cryptname}" ] ||
    while true; do
        if [ "$YKFDE_CHALLENGE_PASSWORD_NEEDED" = "1" ]; then
            echo " > Please provide the challenge password."
            while [ -z "$_pw" ]; do
            printf "   Enter password: "; if [ "$DBG" ]; then read -r _pw; else read -r -s _pw; fi
            _pw=$(printf %s "$_pw" | sha256sum | awk '{print $1}')
            done
            [ "$DBG" ] || echo # if /NOT/ DBG, we need to output \n here.
            YKFDE_CHALLENGE="$_pw"
        fi

        [ "$DBG" ] && printf "   ykinfo -$YKFDE_CHALLENGE_SLOT \"$YKFDE_CHALLENGE\": "
        _tmp="$(ykinfo -"$YKFDE_CHALLENGE_SLOT" 2>&1)";
        [ "$DBG" ] && echo "$_tmp"
        [ "$DBG" ] && echo "   Running: ykchalresp -$YKFDE_CHALLENGE_SLOT \"$YKFDE_CHALLENGE\"..."
        _passphrase="$(ykchalresp -"$YKFDE_CHALLENGE_SLOT" "$YKFDE_CHALLENGE" 2>/dev/null| tr -d '\n')"
        if [ -z "$_passphrase" ]; then
            printf "\n   Yubikey did not provide a response - Initializing second attempt, touch the device if necessary.\n"
            _passphrase="$(ykchalresp -"$YKFDE_CHALLENGE_SLOT" "$YKFDE_CHALLENGE" 2>/dev/null| tr -d '\n')"
        fi

        if [ -z "$_passphrase" ]; then
            printf "\n   Yubikey did not provide a response - Initializing second attempt, touch the device if necessary.\n"
            _passphrase="$(ykchalresp -"$YKFDE_CHALLENGE_SLOT" "$YKFDE_CHALLENGE" 2>/dev/null| tr -d '\n')"
        fi
        [ "$DBG" ] && printf "\n   Received response: '$_passphrase'\n"

        if [ -n "$_passphrase" ] && [ "$YKFDE_CHALLENGE_PASSWORD_NEEDED" = "1" ]; then
            _passphrase="$_pw$_passphrase"
        fi
        [ "$DBG" ] && echo " > Passing '$_passphrase' to cryptsetup!"
        [ "$DBG" ] && echo " > Decrypting (cryptsetup luksResume \"${cryptname}\")..." || echo " > Decrypting (cryptsetup luksResume)..."
        printf %s "$_passphrase"| cryptsetup luksResume "${cryptname}" 2>&1;
        [ $? -le 1 ] && break
        sleep 2
    done

# Stop udev from initramfs, as the real daemon from rootfs will be restarted
udevadm control --exit
